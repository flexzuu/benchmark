/*
 * Facade Service
 *
 * a facade service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"

	post "github.com/flexzuu/thesis/example/openapi/post/openapi/client"
	rating "github.com/flexzuu/thesis/example/openapi/rating/openapi/client"
	user "github.com/flexzuu/thesis/example/openapi/user/openapi/client"
	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

//dependencies
var postServiceClient *post.APIClient
var userServiceClient *user.APIClient
var ratingServiceClient *rating.APIClient

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	postServiceClient = post.NewAPIClient(post.NewConfiguration())
	userServiceClient = user.NewAPIClient(user.NewConfiguration())
	ratingServiceClient = rating.NewAPIClient(rating.NewConfiguration())

	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case "GET":
			router.GET(route.Pattern, route.HandlerFunc)
		case "POST":
			router.POST(route.Pattern, route.HandlerFunc)
		case "PUT":
			router.PUT(route.Pattern, route.HandlerFunc)
		case "DELETE":
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		"GET",
		"/",
		Index,
	},

	{
		"AuthorDetail",
		strings.ToUpper("Get"),
		"/facade/author/:id",
		AuthorDetail,
	},

	{
		"ListPosts",
		strings.ToUpper("Get"),
		"/facade/post",
		ListPosts,
	},

	{
		"PostDetail",
		strings.ToUpper("Get"),
		"/facade/post/:id",
		PostDetail,
	},
}
