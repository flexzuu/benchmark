// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rating/rating/rating.proto

package rating

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the ID
type GetRatingRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRatingRequest) Reset()         { *m = GetRatingRequest{} }
func (m *GetRatingRequest) String() string { return proto.CompactTextString(m) }
func (*GetRatingRequest) ProtoMessage()    {}
func (*GetRatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa633c51c33f9519, []int{0}
}

func (m *GetRatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRatingRequest.Unmarshal(m, b)
}
func (m *GetRatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRatingRequest.Marshal(b, m, deterministic)
}
func (m *GetRatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRatingRequest.Merge(m, src)
}
func (m *GetRatingRequest) XXX_Size() int {
	return xxx_messageInfo_GetRatingRequest.Size(m)
}
func (m *GetRatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRatingRequest proto.InternalMessageInfo

func (m *GetRatingRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

// The request message containing the PostID
type ListRatingsOfPostRequest struct {
	PostID               int64    `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRatingsOfPostRequest) Reset()         { *m = ListRatingsOfPostRequest{} }
func (m *ListRatingsOfPostRequest) String() string { return proto.CompactTextString(m) }
func (*ListRatingsOfPostRequest) ProtoMessage()    {}
func (*ListRatingsOfPostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa633c51c33f9519, []int{1}
}

func (m *ListRatingsOfPostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRatingsOfPostRequest.Unmarshal(m, b)
}
func (m *ListRatingsOfPostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRatingsOfPostRequest.Marshal(b, m, deterministic)
}
func (m *ListRatingsOfPostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRatingsOfPostRequest.Merge(m, src)
}
func (m *ListRatingsOfPostRequest) XXX_Size() int {
	return xxx_messageInfo_ListRatingsOfPostRequest.Size(m)
}
func (m *ListRatingsOfPostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRatingsOfPostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRatingsOfPostRequest proto.InternalMessageInfo

func (m *ListRatingsOfPostRequest) GetPostID() int64 {
	if m != nil {
		return m.PostID
	}
	return 0
}

// The request message containing the ID
type CreateRatingRequest struct {
	PostID               int64    `protobuf:"varint,1,opt,name=postID,proto3" json:"postID,omitempty"`
	Rating               int32    `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRatingRequest) Reset()         { *m = CreateRatingRequest{} }
func (m *CreateRatingRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRatingRequest) ProtoMessage()    {}
func (*CreateRatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa633c51c33f9519, []int{2}
}

func (m *CreateRatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRatingRequest.Unmarshal(m, b)
}
func (m *CreateRatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRatingRequest.Marshal(b, m, deterministic)
}
func (m *CreateRatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRatingRequest.Merge(m, src)
}
func (m *CreateRatingRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRatingRequest.Size(m)
}
func (m *CreateRatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRatingRequest proto.InternalMessageInfo

func (m *CreateRatingRequest) GetPostID() int64 {
	if m != nil {
		return m.PostID
	}
	return 0
}

func (m *CreateRatingRequest) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

// The request message containing the ID
type DeleteRatingRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRatingRequest) Reset()         { *m = DeleteRatingRequest{} }
func (m *DeleteRatingRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRatingRequest) ProtoMessage()    {}
func (*DeleteRatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa633c51c33f9519, []int{3}
}

func (m *DeleteRatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRatingRequest.Unmarshal(m, b)
}
func (m *DeleteRatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRatingRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRatingRequest.Merge(m, src)
}
func (m *DeleteRatingRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRatingRequest.Size(m)
}
func (m *DeleteRatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRatingRequest proto.InternalMessageInfo

func (m *DeleteRatingRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

// A list of Ratings
type ListRatingsResponse struct {
	Ratings              []*Rating `protobuf:"bytes,1,rep,name=ratings,proto3" json:"ratings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListRatingsResponse) Reset()         { *m = ListRatingsResponse{} }
func (m *ListRatingsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRatingsResponse) ProtoMessage()    {}
func (*ListRatingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa633c51c33f9519, []int{4}
}

func (m *ListRatingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRatingsResponse.Unmarshal(m, b)
}
func (m *ListRatingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRatingsResponse.Marshal(b, m, deterministic)
}
func (m *ListRatingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRatingsResponse.Merge(m, src)
}
func (m *ListRatingsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRatingsResponse.Size(m)
}
func (m *ListRatingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRatingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRatingsResponse proto.InternalMessageInfo

func (m *ListRatingsResponse) GetRatings() []*Rating {
	if m != nil {
		return m.Ratings
	}
	return nil
}

type Rating struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PostID               int64    `protobuf:"varint,2,opt,name=postID,proto3" json:"postID,omitempty"`
	Value                int32    `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rating) Reset()         { *m = Rating{} }
func (m *Rating) String() string { return proto.CompactTextString(m) }
func (*Rating) ProtoMessage()    {}
func (*Rating) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa633c51c33f9519, []int{5}
}

func (m *Rating) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rating.Unmarshal(m, b)
}
func (m *Rating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rating.Marshal(b, m, deterministic)
}
func (m *Rating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rating.Merge(m, src)
}
func (m *Rating) XXX_Size() int {
	return xxx_messageInfo_Rating.Size(m)
}
func (m *Rating) XXX_DiscardUnknown() {
	xxx_messageInfo_Rating.DiscardUnknown(m)
}

var xxx_messageInfo_Rating proto.InternalMessageInfo

func (m *Rating) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Rating) GetPostID() int64 {
	if m != nil {
		return m.PostID
	}
	return 0
}

func (m *Rating) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*GetRatingRequest)(nil), "rating.GetRatingRequest")
	proto.RegisterType((*ListRatingsOfPostRequest)(nil), "rating.ListRatingsOfPostRequest")
	proto.RegisterType((*CreateRatingRequest)(nil), "rating.CreateRatingRequest")
	proto.RegisterType((*DeleteRatingRequest)(nil), "rating.DeleteRatingRequest")
	proto.RegisterType((*ListRatingsResponse)(nil), "rating.ListRatingsResponse")
	proto.RegisterType((*Rating)(nil), "rating.Rating")
}

func init() { proto.RegisterFile("rating/rating/rating.proto", fileDescriptor_fa633c51c33f9519) }

var fileDescriptor_fa633c51c33f9519 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xc1, 0x6a, 0xa3, 0x50,
	0x14, 0x8d, 0x86, 0x18, 0xb8, 0xc3, 0x84, 0xe1, 0x65, 0x08, 0x62, 0x36, 0xf2, 0x60, 0xc0, 0xcd,
	0x28, 0xa4, 0x94, 0xae, 0x4a, 0x20, 0x4d, 0x1a, 0x02, 0x2d, 0x2d, 0x76, 0xd7, 0x9d, 0xda, 0x1b,
	0x23, 0xd5, 0x3c, 0xeb, 0x7b, 0x86, 0xa6, 0x3f, 0xd1, 0x5f, 0x2e, 0xfa, 0x34, 0x8d, 0x62, 0x57,
	0x72, 0xee, 0x3d, 0x1e, 0x8f, 0xe7, 0x5c, 0x30, 0x32, 0x4f, 0x44, 0xfb, 0xd0, 0x69, 0x3c, 0xec,
	0x34, 0x63, 0x82, 0x11, 0x4d, 0x22, 0x63, 0x1a, 0x32, 0x16, 0xc6, 0xe8, 0x94, 0x53, 0x3f, 0xdf,
	0x3a, 0x98, 0xa4, 0xe2, 0x28, 0x49, 0x94, 0xc2, 0x9f, 0x35, 0x0a, 0xb7, 0x64, 0xba, 0xf8, 0x96,
	0x23, 0x17, 0x64, 0x04, 0xea, 0x66, 0xa9, 0x2b, 0xa6, 0x62, 0xf5, 0x5d, 0x75, 0xb3, 0xa4, 0x33,
	0xd0, 0xef, 0x22, 0x5e, 0x91, 0xf8, 0xc3, 0xf6, 0x91, 0x71, 0x51, 0x73, 0x27, 0xa0, 0x15, 0xf0,
	0xc4, 0xaf, 0x10, 0x5d, 0xc1, 0xf8, 0x26, 0x43, 0x4f, 0x60, 0x53, 0x7a, 0x02, 0x5a, 0xda, 0xa0,
	0x4b, 0x54, 0xcc, 0xa5, 0x5b, 0x5d, 0x35, 0x15, 0x6b, 0xe0, 0x56, 0x88, 0xfe, 0x83, 0xf1, 0x12,
	0x63, 0x6c, 0xcb, 0xb4, 0x1d, 0xce, 0x61, 0x7c, 0xe6, 0xd0, 0x45, 0x9e, 0xb2, 0x3d, 0x47, 0x62,
	0xc1, 0x50, 0xea, 0x70, 0x5d, 0x31, 0xfb, 0xd6, 0xaf, 0xd9, 0xc8, 0xae, 0x12, 0xaa, 0xe4, 0xea,
	0x35, 0xbd, 0x05, 0x4d, 0x8e, 0xda, 0xd2, 0x67, 0x8e, 0xd5, 0x86, 0xe3, 0xbf, 0x30, 0x38, 0x78,
	0x71, 0x8e, 0x7a, 0xbf, 0x34, 0x2c, 0xc1, 0xec, 0x53, 0x85, 0xdf, 0x52, 0xe8, 0x09, 0xb3, 0x43,
	0x14, 0x20, 0xb9, 0x84, 0xe1, 0x1a, 0xc5, 0xe2, 0xb8, 0x79, 0x21, 0x7a, 0xfd, 0xf5, 0x76, 0xe2,
	0x46, 0xcb, 0x17, 0xed, 0x91, 0x7b, 0x80, 0xe2, 0x8f, 0x64, 0xd8, 0xc4, 0xac, 0xf7, 0x3f, 0xf5,
	0x60, 0x4c, 0x3b, 0x18, 0x75, 0x0e, 0xb4, 0x47, 0xae, 0x40, 0x93, 0x75, 0x90, 0x13, 0xb1, 0xa3,
	0x9e, 0x0e, 0x1f, 0x73, 0xd0, 0x64, 0x01, 0xdf, 0x2f, 0x76, 0x14, 0x62, 0x4c, 0x6c, 0x79, 0x64,
	0x76, 0x7d, 0x64, 0xf6, 0xaa, 0x38, 0x32, 0xda, 0x5b, 0xcc, 0x9f, 0xaf, 0xc3, 0x48, 0xec, 0x72,
	0xdf, 0x0e, 0x58, 0xe2, 0x6c, 0x63, 0x7c, 0xff, 0xc8, 0x73, 0xc7, 0xc7, 0x7d, 0xb0, 0x4b, 0xbc,
	0xec, 0xd5, 0x49, 0xa2, 0x20, 0x63, 0xff, 0xb9, 0x4c, 0xcb, 0x09, 0xb3, 0x34, 0x68, 0x1e, 0xb3,
	0xaf, 0x95, 0x92, 0x17, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x43, 0x9d, 0x29, 0x19, 0xeb, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RatingServiceClient is the client API for RatingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RatingServiceClient interface {
	// Get a single Rating by ID
	GetById(ctx context.Context, in *GetRatingRequest, opts ...grpc.CallOption) (*Rating, error)
	// List Ratings of a Post
	ListOfPost(ctx context.Context, in *ListRatingsOfPostRequest, opts ...grpc.CallOption) (*ListRatingsResponse, error)
	// Create a single Rating validates if the passed AuthorId is valid
	Create(ctx context.Context, in *CreateRatingRequest, opts ...grpc.CallOption) (*Rating, error)
	// Delete a single Rating by ID
	Delete(ctx context.Context, in *DeleteRatingRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type ratingServiceClient struct {
	cc *grpc.ClientConn
}

func NewRatingServiceClient(cc *grpc.ClientConn) RatingServiceClient {
	return &ratingServiceClient{cc}
}

func (c *ratingServiceClient) GetById(ctx context.Context, in *GetRatingRequest, opts ...grpc.CallOption) (*Rating, error) {
	out := new(Rating)
	err := c.cc.Invoke(ctx, "/rating.RatingService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingServiceClient) ListOfPost(ctx context.Context, in *ListRatingsOfPostRequest, opts ...grpc.CallOption) (*ListRatingsResponse, error) {
	out := new(ListRatingsResponse)
	err := c.cc.Invoke(ctx, "/rating.RatingService/ListOfPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingServiceClient) Create(ctx context.Context, in *CreateRatingRequest, opts ...grpc.CallOption) (*Rating, error) {
	out := new(Rating)
	err := c.cc.Invoke(ctx, "/rating.RatingService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ratingServiceClient) Delete(ctx context.Context, in *DeleteRatingRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rating.RatingService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RatingServiceServer is the server API for RatingService service.
type RatingServiceServer interface {
	// Get a single Rating by ID
	GetById(context.Context, *GetRatingRequest) (*Rating, error)
	// List Ratings of a Post
	ListOfPost(context.Context, *ListRatingsOfPostRequest) (*ListRatingsResponse, error)
	// Create a single Rating validates if the passed AuthorId is valid
	Create(context.Context, *CreateRatingRequest) (*Rating, error)
	// Delete a single Rating by ID
	Delete(context.Context, *DeleteRatingRequest) (*empty.Empty, error)
}

func RegisterRatingServiceServer(s *grpc.Server, srv RatingServiceServer) {
	s.RegisterService(&_RatingService_serviceDesc, srv)
}

func _RatingService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rating.RatingService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServiceServer).GetById(ctx, req.(*GetRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RatingService_ListOfPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRatingsOfPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServiceServer).ListOfPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rating.RatingService/ListOfPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServiceServer).ListOfPost(ctx, req.(*ListRatingsOfPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RatingService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rating.RatingService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServiceServer).Create(ctx, req.(*CreateRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RatingService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rating.RatingService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServiceServer).Delete(ctx, req.(*DeleteRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RatingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rating.RatingService",
	HandlerType: (*RatingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetById",
			Handler:    _RatingService_GetById_Handler,
		},
		{
			MethodName: "ListOfPost",
			Handler:    _RatingService_ListOfPost_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _RatingService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RatingService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rating/rating/rating.proto",
}
