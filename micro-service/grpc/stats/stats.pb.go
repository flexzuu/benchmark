// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stats/stats.proto

package stats

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoundTripResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundTripResponse) Reset()         { *m = RoundTripResponse{} }
func (m *RoundTripResponse) String() string { return proto.CompactTextString(m) }
func (*RoundTripResponse) ProtoMessage()    {}
func (*RoundTripResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d537a116482db188, []int{0}
}

func (m *RoundTripResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundTripResponse.Unmarshal(m, b)
}
func (m *RoundTripResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundTripResponse.Marshal(b, m, deterministic)
}
func (m *RoundTripResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundTripResponse.Merge(m, src)
}
func (m *RoundTripResponse) XXX_Size() int {
	return xxx_messageInfo_RoundTripResponse.Size(m)
}
func (m *RoundTripResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundTripResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoundTripResponse proto.InternalMessageInfo

func (m *RoundTripResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*RoundTripResponse)(nil), "stats.RoundTripResponse")
}

func init() { proto.RegisterFile("stats/stats.proto", fileDescriptor_d537a116482db188) }

var fileDescriptor_d537a116482db188 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2e, 0x49, 0x2c,
	0x29, 0xd6, 0x07, 0x93, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xac, 0x60, 0x8e, 0x94, 0x74,
	0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x58, 0x30, 0xa9, 0x34, 0x4d, 0x3f, 0x35, 0xb7, 0xa0,
	0xa4, 0x12, 0xa2, 0x46, 0x49, 0x93, 0x4b, 0x30, 0x28, 0xbf, 0x34, 0x2f, 0x25, 0xa4, 0x28, 0xb3,
	0x20, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x84, 0x8b, 0x35, 0x39, 0xbf, 0x34,
	0xaf, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0x35, 0x08, 0xc2, 0x31, 0xf2, 0xe4, 0x62, 0x0d, 0x06,
	0x19, 0x28, 0xe4, 0xc0, 0xc5, 0x05, 0xd7, 0x53, 0x2c, 0x24, 0xa6, 0x07, 0x31, 0x5f, 0x0f, 0x66,
	0xbe, 0x9e, 0x2b, 0xc8, 0x7c, 0x29, 0x09, 0x3d, 0x88, 0x5b, 0x30, 0x8c, 0x57, 0x62, 0x70, 0x32,
	0x8f, 0x32, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcb, 0x49,
	0xad, 0xa8, 0x2a, 0x2d, 0xd5, 0x4f, 0x4a, 0xcd, 0x4b, 0xce, 0xc8, 0x4d, 0x2c, 0xca, 0xd6, 0xcf,
	0xcd, 0x4c, 0x2e, 0xca, 0xd7, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0x2f, 0x2a,
	0x48, 0x86, 0x78, 0x2c, 0x89, 0x0d, 0x6c, 0x89, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xcc,
	0xda, 0xbf, 0xee, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatsClient is the client API for Stats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsClient interface {
	RoundTrips(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RoundTripResponse, error)
}

type statsClient struct {
	cc *grpc.ClientConn
}

func NewStatsClient(cc *grpc.ClientConn) StatsClient {
	return &statsClient{cc}
}

func (c *statsClient) RoundTrips(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RoundTripResponse, error) {
	out := new(RoundTripResponse)
	err := c.cc.Invoke(ctx, "/stats.Stats/RoundTrips", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatsServer is the server API for Stats service.
type StatsServer interface {
	RoundTrips(context.Context, *empty.Empty) (*RoundTripResponse, error)
}

func RegisterStatsServer(s *grpc.Server, srv StatsServer) {
	s.RegisterService(&_Stats_serviceDesc, srv)
}

func _Stats_RoundTrips_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).RoundTrips(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.Stats/RoundTrips",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).RoundTrips(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stats.Stats",
	HandlerType: (*StatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RoundTrips",
			Handler:    _Stats_RoundTrips_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stats/stats.proto",
}
