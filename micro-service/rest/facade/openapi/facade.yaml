openapi: 3.0.0
servers:
  - url: 'http://localhost:4000'
info:
  description: a facade service
  version: 1.0.0
  title: Facade Service
tags:
  - name: facade
    description: Operations about facade
paths:
  '/facade/post':
    get:
      tags:
        - facade
        - post
      summary: List Posts
      description: ''
      operationId: ListPosts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          description: Invalid id supplied
        '404':
          description: Facade not found
  '/facade/post/{id}':
    get:
      tags:
        - facade
        - post
      summary: Post Detail
      description: ''
      operationId: PostDetail
      parameters:
        - name: id
          in: path
          description: For what post detail is requested
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facade'
        '400':
          description: Invalid id supplied
        '404':
          description: Facade not found
  '/facade/author/{id}':
    get:
      tags:
        - facade
        - author
        - user
      summary: Author Detail
      description: ''
      operationId: AuthorDetail
      parameters:
        - name: id
          in: path
          description: For what author detail is requested
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facade'
        '400':
          description: Invalid id supplied
        '404':
          description: Facade not found
components:
  schemas:
    User:
      title: a User
      description: A User
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        name:
          type: string
    Post:
      title: a Post
      description: A Post
      type: object
      properties:
        id:
          type: integer
          format: int64
        authorId:
          type: integer
          format: int64
        headline:
          type: string
        content:
          type: string
          description: content as markdown
    PostList:
      title: List Posts
      description: a list of posts
      type: object
      properties:
        posts:
          type: "array"
          items:
            $ref: '#/components/schemas/Post'
    PostDetail:
      title: PostDetail
      description: Post with more info included
      type: object
      properties:
        post:
          $ref: '#/components/schemas/Post'
        author:
          $ref: '#/components/schemas/User'
        avgRating:
          type: number
          format: double
    AuthorDetail:
      title: AuthorDetail
      description: Author with more info included
      type: object
      properties:
        author:
          $ref: '#/components/schemas/User'
        posts:
          type: "array"
          items:
            $ref: '#/components/schemas/Post'
        avgRating:
          type: number
          format: double

        
    