openapi: 3.0.0
info:
  description: a rating service
  title: Rating Service
  version: 1.0.0
servers:
- url: http://localhost:4003
tags:
- description: Operations about rating
  name: rating
paths:
  /rating:
    get:
      description: a list of ratings
      operationId: listRatings
      parameters:
      - description: Only get ratings of the supplied post
        explode: true
        in: query
        name: postId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingList'
          description: successful operation
        400:
          description: invalid post id
        404:
          description: Rating not found
      summary: List ratings
      tags:
      - rating
    post:
      operationId: createRating
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRating'
        description: Created rating object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: successful operation
      summary: Create rating
      tags:
      - rating
  /rating/{id}:
    delete:
      description: Delete a rating by id
      operationId: deleteRating
      parameters:
      - description: The id that needs to be deleted. Use 0 for testing.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        400:
          description: Invalid id supplied
        404:
          description: Rating not found
      summary: Delete rating
      tags:
      - rating
    get:
      operationId: getRatingById
      parameters:
      - description: The id that needs to be fetched. Use 0 for testing.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: successful operation
        400:
          description: Invalid id supplied
        404:
          description: Rating not found
      summary: Get rating by id
      tags:
      - rating
components:
  schemas:
    Rating:
      description: A Rating
      example:
        id: 0
        postId: 6
        value: 1
      properties:
        id:
          format: int64
          type: integer
        postId:
          format: int64
          type: integer
        value:
          format: int32
          type: integer
      title: a Rating
      type: object
    RatingList:
      description: a list of ratings
      example:
        ratings:
        - id: 0
          postId: 6
          value: 1
        - id: 0
          postId: 6
          value: 1
      properties:
        ratings:
          items:
            $ref: '#/components/schemas/Rating'
          type: array
      title: List Ratings
      type: object
    CreateRating:
      description: create rating body
      properties:
        postId:
          format: int64
          type: integer
        rating:
          format: int32
          type: integer
      title: create rating body
      type: object
